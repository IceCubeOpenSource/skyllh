This file contains a log-book for major changes between releases.

v23.2.1
=======
- Add access operator support for core.dataset.DatasetCollection.

    - Individual datasets of a dataset collection (``dsc``) can now be accessed
      via ``dsc[name]`` or ``dsc[name1, name2, ...]``.

- Allow the definition of an origin of a dataset via the
  core.dataset.DatasetOrigin class and download the dataset automatically from
  the origin to the local host. The following transfer methods are provided:

    - wget
    - rsync

  Unit tests for these transfer methods are added.

- The iminuit package is an optional tool now.

- Automatically create an I3Livetime instance for the I3DatasetData.livetime
  property if good-run-list information are available.

- A ``DetectorModel`` instance needs to be specified for each dataset of an
  ``Analysis`` instance via the ``Analysis.add_dataset`` method.

- GRL start times of an IceCube dataset (``I3Dataset``) will be clipped
  automatically to the stop times of previous runs if runs overlap.

- Introduce energy PDF class core.pdf.SingleConditionalEnergyPDF for an energy
  PDF in log10(E_reco) conditional on a single parameter. It is used as base
  class for the IceCube background and signal energy PDFs in sin(dec_reco), as
  well as for the generic background energy PDF in sin(altitude_reco) space.

- Introduce PDF ratio class
  core.pdfratio.SplinedSingleConditionalEnergySigSetOverBkgPDFRatio as generic
  PDF ratio for core.pdf.SingleConditionalEnergyPDF energy PDFs.

v23.2.0
=======
- Complete overhaul of SkyLLH for more generic handling of parameters
  (fixed & fit parameters) and their mapping to sources.

    - Single class core.parameters.Parameter for fixed and fit parameters.
    - New class core.parameters.ParameterModelMapper to map global parameters
      to local model (e.g. source) parameters.
    - Class method core.pdf.PDF.get_pd takes structured numpy.ndarray as
      argument, holding local parameter names and values for each source.

- Intrinsic support for multiple sources.

    - New class property core.trialdata.TrialDataManager.src_evt_idxs with
      source and event indices mapping selected events to the sources.

- Simplification of the class hierarchy & source code structure.

    - The source_model and flux_model modules of the skyllh.physics module have
      been moved to the skyllh.core module.

- Local configuration for an analysis.

    - The global configuration dictionary skyllh.core.config.CFG has been
      replaced by a local skyllh.core.config.Config instance, which is passed to
      an Analysis instance and all other class instances that need access to the
      configuration. Classes derived from skyllh.core.config.HasConfig provide
      the cfg property and require the cfg argument in their constructor.

- Data field specification via stages for data file loading

    - Which data fields of a data file are required by the data preparation or
      the analysis is now specified via data field stages through the
      configuration. Data field stages are defined through class members of the
      skyllh.core.datafields.DataFieldStages class.

- Split the background generator into DatasetBackgroundGenerator and
  MultiDatasetBackgroundGenerator to allow different background generators for
  different datasets / detectors.

  - This removes the background generation method argument of the Analysis
    class. The BackgroundGenerationMethod instance is now passed to the
    DatasetBackgroundGenerator constructor.

- New generic flux model function concept.
- New generic PDF class for time PDFs.
- Support for Parquet data files via optional pyarrow Python package.
- Introduce factory concept for detector signal yield construction.

    DetSigYieldBuilder classes can provide a factory function to construct
    DetSigYield instances efficiently for multiple flux models.

- Speed improvements for analysis creation and trial generation.

    - i3.detsigyield.SingleParamFluxPointLikeSourceI3DetSigYieldBuilder:

        MC events are sorted in sin(true_dec) before histograms are made for
        each parameter value. Thus, numpy.histogram works faster.

    - core.event_selection.SpatialBoxEventSelectionMethod:

        Improved calculation of right-ascention difference. Thus, speed-up in
        trial generation when using this event selection method.

- core.scrambling.DataScrambler.scramble_data method also takes Dataset instance
  as argument
- Usage of the tqdm Python package for progress bars.
- More unit tests.
- Improved documentation.
- Following PEP8 coding style standard.

v23.1.1
=======
- bugfix of core.pdf.MultiDimGridPDFSet
- bugfix of core.pdf.MappedMultiDimGridPDFSet
- removal of depricated proptery core.pdf.PDFSet.pdf_axes

v23.1.0
=======
